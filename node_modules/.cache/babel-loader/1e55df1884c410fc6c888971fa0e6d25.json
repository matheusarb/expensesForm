{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-training\\\\firstapp\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from '../UI/Card';\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  //it is best practice to separate large chunks of JS logic from your JSX code, as shown below\n  const OnClick = () => {\n    return console.log('Clicked!');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: OnClick,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","Card","ExpenseItem","props","OnClick","console","log","date","title","amount"],"sources":["D:/ReactJS/react-training/firstapp/react-complete-guide/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from '../UI/Card';\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  //it is best practice to separate large chunks of JS logic from your JSX code, as shown below\r\n  const OnClick = () => {\r\n    return console.log('Clicked!');\r\n  }\r\n  \r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n      <button onClick={OnClick}>Change Title</button>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B;EACA,MAAMC,OAAO,GAAG,MAAM;IACpB,OAAOC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAP;EACD,CAFD;;EAIA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,cAAhB;IAAA,wBACE,QAAC,WAAD;MAAa,IAAI,EAAEH,KAAK,CAACI;IAAzB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,2BAAf;MAAA,wBACE;QAAA,UAAKJ,KAAK,CAACK;MAAX;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,qBAAf;QAAA,gBAAuCL,KAAK,CAACM,MAA7C;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME;MAAQ,OAAO,EAAEL,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAhBD;;KAAMF,W;AAkBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}